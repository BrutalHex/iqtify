@inject SignInManager<QTF.Domain.Entity.UserBundle.ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="@ManageNavPages.IndexNavClass(ViewContext)" asp-page="./Index">Profile</a>
    </li>
    <li class="nav-item">
        <a class="@ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a>
    </li>
    @if (hasExternalLogins)
    {
        <li class="nav-item">
            <a class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)" id="external-login" asp-page="./ExternalLogins">External logins</a>
        </li>
    }
    @*<li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>*@
    <li class="nav-item">
        <a class="@ManageNavPages.PersonalDataNavClass(ViewContext)" asp-page="./PersonalData">Personal data</a>
    </li>
</ul>
